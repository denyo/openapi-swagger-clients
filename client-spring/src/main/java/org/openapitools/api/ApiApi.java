/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.0.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.DashboardData;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-05-03T10:14:46.605Z[GMT]")

@Validated
@Api(value = "api", description = "the api API")
public interface ApiApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "getDashboardData", nickname = "getDashboardDataUsingGET", notes = "", response = DashboardData.class, tags={ "dashboard-data-controller", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = DashboardData.class),
        @ApiResponse(code = 401, message = "Unauthorized"),
        @ApiResponse(code = 403, message = "Forbidden"),
        @ApiResponse(code = 404, message = "Not Found") })
    @RequestMapping(value = "/api/dashboard-data",
        produces = { "*/*" }, 
        method = RequestMethod.GET)
    default ResponseEntity<DashboardData> getDashboardDataUsingGET() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("*/*"))) {
                    ApiUtil.setExampleResponse(request, "*/*", "{  \"trainData\" : [ {    \"trips\" : [ {      \"departureTime\" : \"2000-01-23T04:56:07.000+00:00\",      \"trainIdentifier\" : \"trainIdentifier\",      \"delay\" : 1,      \"directionToDisplay\" : \"directionToDisplay\",      \"cancelled\" : true,      \"platform\" : \"platform\",      \"vehicleType\" : \"vehicleType\",      \"viaToDisplay\" : \"viaToDisplay\",      \"direction\" : \"direction\",      \"via\" : [ \"via\", \"via\" ]    }, {      \"departureTime\" : \"2000-01-23T04:56:07.000+00:00\",      \"trainIdentifier\" : \"trainIdentifier\",      \"delay\" : 1,      \"directionToDisplay\" : \"directionToDisplay\",      \"cancelled\" : true,      \"platform\" : \"platform\",      \"vehicleType\" : \"vehicleType\",      \"viaToDisplay\" : \"viaToDisplay\",      \"direction\" : \"direction\",      \"via\" : [ \"via\", \"via\" ]    } ],    \"station\" : \"station\",    \"goToInformation\" : {      \"byLocalTransport\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byBike\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byWalk\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byTaxi\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      }    }  }, {    \"trips\" : [ {      \"departureTime\" : \"2000-01-23T04:56:07.000+00:00\",      \"trainIdentifier\" : \"trainIdentifier\",      \"delay\" : 1,      \"directionToDisplay\" : \"directionToDisplay\",      \"cancelled\" : true,      \"platform\" : \"platform\",      \"vehicleType\" : \"vehicleType\",      \"viaToDisplay\" : \"viaToDisplay\",      \"direction\" : \"direction\",      \"via\" : [ \"via\", \"via\" ]    }, {      \"departureTime\" : \"2000-01-23T04:56:07.000+00:00\",      \"trainIdentifier\" : \"trainIdentifier\",      \"delay\" : 1,      \"directionToDisplay\" : \"directionToDisplay\",      \"cancelled\" : true,      \"platform\" : \"platform\",      \"vehicleType\" : \"vehicleType\",      \"viaToDisplay\" : \"viaToDisplay\",      \"direction\" : \"direction\",      \"via\" : [ \"via\", \"via\" ]    } ],    \"station\" : \"station\",    \"goToInformation\" : {      \"byLocalTransport\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byBike\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byWalk\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byTaxi\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      }    }  } ],  \"carsharingData\" : [ {    \"lon\" : 6.0274563,    \"id\" : \"id\",    \"type\" : \"WESHARE\",    \"lat\" : 0.8008282  }, {    \"lon\" : 6.0274563,    \"id\" : \"id\",    \"type\" : \"WESHARE\",    \"lat\" : 0.8008282  } ],  \"weatherData\" : {    \"temperature\" : 5,    \"willRainToday\" : true,    \"weatherMainDescription\" : \"CLEAR_SKY\"  },  \"airport\" : {    \"departures\" : [ {      \"departureTime\" : \"2000-01-23T04:56:07.000+00:00\",      \"flightNo\" : \"flightNo\",      \"destination\" : \"destination\",      \"counter\" : \"counter\",      \"gate\" : \"gate\",      \"terminal\" : \"terminal\",      \"status\" : \"status\"    }, {      \"departureTime\" : \"2000-01-23T04:56:07.000+00:00\",      \"flightNo\" : \"flightNo\",      \"destination\" : \"destination\",      \"counter\" : \"counter\",      \"gate\" : \"gate\",      \"terminal\" : \"terminal\",      \"status\" : \"status\"    } ],    \"goToInformation\" : {      \"byLocalTransport\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byBike\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byWalk\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      },      \"byTaxi\" : {        \"requiredTime\" : \"requiredTime\",        \"detail\" : \"detail\"      }    }  }}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
