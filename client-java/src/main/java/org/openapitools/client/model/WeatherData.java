/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * WeatherData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-05-03T10:14:12.734Z[GMT]")
public class WeatherData {
  public static final String SERIALIZED_NAME_TEMPERATURE = "temperature";
  @SerializedName(SERIALIZED_NAME_TEMPERATURE)
  private Integer temperature;

  /**
   * Gets or Sets weatherMainDescription
   */
  @JsonAdapter(WeatherMainDescriptionEnum.Adapter.class)
  public enum WeatherMainDescriptionEnum {
    CLEAR_SKY("CLEAR_SKY"),
    
    FEW_CLOUDS("FEW_CLOUDS"),
    
    SCATTERED_CLOUDS("SCATTERED_CLOUDS"),
    
    BROKEN_CLOUDS("BROKEN_CLOUDS"),
    
    SHOWER_RAIN("SHOWER_RAIN"),
    
    RAIN("RAIN"),
    
    THUNDERSTORM("THUNDERSTORM"),
    
    SNOW("SNOW"),
    
    MIST("MIST");

    private String value;

    WeatherMainDescriptionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WeatherMainDescriptionEnum fromValue(String text) {
      for (WeatherMainDescriptionEnum b : WeatherMainDescriptionEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<WeatherMainDescriptionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WeatherMainDescriptionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WeatherMainDescriptionEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return WeatherMainDescriptionEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_WEATHER_MAIN_DESCRIPTION = "weatherMainDescription";
  @SerializedName(SERIALIZED_NAME_WEATHER_MAIN_DESCRIPTION)
  private WeatherMainDescriptionEnum weatherMainDescription;

  public static final String SERIALIZED_NAME_WILL_RAIN_TODAY = "willRainToday";
  @SerializedName(SERIALIZED_NAME_WILL_RAIN_TODAY)
  private Boolean willRainToday;

  public WeatherData temperature(Integer temperature) {
    this.temperature = temperature;
    return this;
  }

   /**
   * Get temperature
   * @return temperature
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getTemperature() {
    return temperature;
  }

  public void setTemperature(Integer temperature) {
    this.temperature = temperature;
  }

  public WeatherData weatherMainDescription(WeatherMainDescriptionEnum weatherMainDescription) {
    this.weatherMainDescription = weatherMainDescription;
    return this;
  }

   /**
   * Get weatherMainDescription
   * @return weatherMainDescription
  **/
  @ApiModelProperty(required = true, value = "")
  public WeatherMainDescriptionEnum getWeatherMainDescription() {
    return weatherMainDescription;
  }

  public void setWeatherMainDescription(WeatherMainDescriptionEnum weatherMainDescription) {
    this.weatherMainDescription = weatherMainDescription;
  }

  public WeatherData willRainToday(Boolean willRainToday) {
    this.willRainToday = willRainToday;
    return this;
  }

   /**
   * Get willRainToday
   * @return willRainToday
  **/
  @ApiModelProperty(value = "")
  public Boolean getWillRainToday() {
    return willRainToday;
  }

  public void setWillRainToday(Boolean willRainToday) {
    this.willRainToday = willRainToday;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeatherData weatherData = (WeatherData) o;
    return Objects.equals(this.temperature, weatherData.temperature) &&
        Objects.equals(this.weatherMainDescription, weatherData.weatherMainDescription) &&
        Objects.equals(this.willRainToday, weatherData.willRainToday);
  }

  @Override
  public int hashCode() {
    return Objects.hash(temperature, weatherMainDescription, willRainToday);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeatherData {\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    weatherMainDescription: ").append(toIndentedString(weatherMainDescription)).append("\n");
    sb.append("    willRainToday: ").append(toIndentedString(willRainToday)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

